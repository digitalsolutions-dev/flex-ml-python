Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to '/Users/katarov/flex-ml/flex-ml-python-only/AutogluonModels/ag-20250915_122457'
=================== System Info ===================
AutoGluon Version:  1.4.1b20250915
Python Version:     3.9.6
Operating System:   Darwin
Platform Machine:   arm64
Platform Version:   Darwin Kernel Version 24.6.0: Mon Jul 14 11:30:29 PDT 2025; root:xnu-11417.140.69~1/RELEASE_ARM64_T6000
CPU Count:          10
GPU Count:          1
Memory Avail:       4.75 GB / 16.00 GB (29.7%)
Disk Space Avail:   17.11 GB / 460.43 GB (3.7%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'D',
 'hyperparameters': {'ARIMA': {},
                     'AutoETS': {},
                     'DeepAR': {'epochs': 3},
                     'DirectTabular': {'max_leaves': 64, 'num_layers': 2},
                     'NPTS': {},
                     'PatchTST': {'epochs': 3},
                     'RecursiveTabular': {'max_leaves': 64, 'num_layers': 2},
                     'SeasonalNaive': {},
                     'TemporalFusionTransformer': {'dropout_rate': 0.2,
                                                   'epochs': 3},
                     'Theta': {},
                     'TiDE': {'epochs': 3}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 28,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 1040 rows, 1 time series. Median time series length is 1040 (min=1040, max=1040). 

Provided data contains following columns:
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-09-15 14:24:59
Models that will be trained: ['SeasonalNaive', 'RecursiveTabular', 'DirectTabular', 'NPTS', 'Theta', 'AutoETS', 'TemporalFusionTransformer', 'DeepAR', 'PatchTST', 'TiDE', 'ARIMA']
Training timeseries model SeasonalNaive. Training for up to 49.9s of the 598.3s of remaining time.
	-0.8521       = Validation score (-MAPE)
	0.01    s     = Training runtime
	0.94    s     = Validation (prediction) runtime
Training timeseries model RecursiveTabular. Training for up to 54.3s of the 597.3s of remaining time.
RecursiveTabular/W0 ignores following hyperparameters: ['max_leaves', 'num_layers']. See the documentation for RecursiveTabular/W0 for the list of supported hyperparameters.
	-0.8636       = Validation score (-MAPE)
	0.66    s     = Training runtime
	0.06    s     = Validation (prediction) runtime
Training timeseries model DirectTabular. Training for up to 59.7s of the 596.6s of remaining time.
DirectTabular/W0 ignores following hyperparameters: ['max_leaves', 'num_layers']. See the documentation for DirectTabular/W0 for the list of supported hyperparameters.
	-0.7056       = Validation score (-MAPE)
	1.40    s     = Training runtime
	0.03    s     = Validation (prediction) runtime
Training timeseries model NPTS. Training for up to 66.1s of the 595.1s of remaining time.
	-0.5706       = Validation score (-MAPE)
	0.01    s     = Training runtime
	1.25    s     = Validation (prediction) runtime
Training timeseries model Theta. Training for up to 74.2s of the 593.9s of remaining time.
	-0.5143       = Validation score (-MAPE)
	0.01    s     = Training runtime
	2.02    s     = Validation (prediction) runtime
Training timeseries model AutoETS. Training for up to 84.6s of the 591.9s of remaining time.
	-0.5483       = Validation score (-MAPE)
	0.01    s     = Training runtime
	1.84    s     = Validation (prediction) runtime
Training timeseries model TemporalFusionTransformer. Training for up to 98.3s of the 590.0s of remaining time.
	Warning: Exception caused TemporalFusionTransformer to fail during training... Skipping this model.
Traceback (most recent call last):
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/trainer/trainer.py", line 356, in _train_and_save
    model = self._train_single(train_data, model, val_data=val_data, time_limit=time_limit)
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/trainer/trainer.py", line 271, in _train_single
    model.fit(
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/abstract/abstract_timeseries_model.py", line 516, in fit
    self._fit(
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/multi_window/multi_window_model.py", line 141, in _fit
    model.fit(
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/abstract/abstract_timeseries_model.py", line 475, in fit
    self._initialize_transforms_and_regressor()
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/abstract/abstract_timeseries_model.py", line 414, in _initialize_transforms_and_regressor
    self.target_scaler = get_target_scaler(self.get_hyperparameters().get("target_scaler"), target=self.target)
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/gluonts/abstract.py", line 231, in get_hyperparameters
    raise ValueError(f"Parameter '{alias}' cannot be specified when '{actual}' is also specified.")
ValueError: Parameter 'epochs' cannot be specified when 'max_epochs' is also specified.

Training timeseries model DeepAR. Training for up to 118.0s of the 590.0s of remaining time.
	Warning: Exception caused DeepAR to fail during training... Skipping this model.
Traceback (most recent call last):
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/trainer/trainer.py", line 356, in _train_and_save
    model = self._train_single(train_data, model, val_data=val_data, time_limit=time_limit)
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/trainer/trainer.py", line 271, in _train_single
    model.fit(
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/abstract/abstract_timeseries_model.py", line 516, in fit
    self._fit(
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/multi_window/multi_window_model.py", line 141, in _fit
    model.fit(
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/abstract/abstract_timeseries_model.py", line 475, in fit
    self._initialize_transforms_and_regressor()
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/abstract/abstract_timeseries_model.py", line 414, in _initialize_transforms_and_regressor
    self.target_scaler = get_target_scaler(self.get_hyperparameters().get("target_scaler"), target=self.target)
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/gluonts/abstract.py", line 231, in get_hyperparameters
    raise ValueError(f"Parameter '{alias}' cannot be specified when '{actual}' is also specified.")
ValueError: Parameter 'epochs' cannot be specified when 'max_epochs' is also specified.

Training timeseries model PatchTST. Training for up to 147.5s of the 590.0s of remaining time.
	Warning: Exception caused PatchTST to fail during training... Skipping this model.
Traceback (most recent call last):
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/trainer/trainer.py", line 356, in _train_and_save
    model = self._train_single(train_data, model, val_data=val_data, time_limit=time_limit)
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/trainer/trainer.py", line 271, in _train_single
    model.fit(
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/abstract/abstract_timeseries_model.py", line 516, in fit
    self._fit(
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/multi_window/multi_window_model.py", line 141, in _fit
    model.fit(
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/abstract/abstract_timeseries_model.py", line 475, in fit
    self._initialize_transforms_and_regressor()
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/abstract/abstract_timeseries_model.py", line 414, in _initialize_transforms_and_regressor
    self.target_scaler = get_target_scaler(self.get_hyperparameters().get("target_scaler"), target=self.target)
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/gluonts/abstract.py", line 231, in get_hyperparameters
    raise ValueError(f"Parameter '{alias}' cannot be specified when '{actual}' is also specified.")
ValueError: Parameter 'epochs' cannot be specified when 'max_epochs' is also specified.

Training timeseries model TiDE. Training for up to 196.7s of the 590.0s of remaining time.
	Warning: Exception caused TiDE to fail during training... Skipping this model.
Traceback (most recent call last):
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/trainer/trainer.py", line 356, in _train_and_save
    model = self._train_single(train_data, model, val_data=val_data, time_limit=time_limit)
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/trainer/trainer.py", line 271, in _train_single
    model.fit(
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/abstract/abstract_timeseries_model.py", line 516, in fit
    self._fit(
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/multi_window/multi_window_model.py", line 141, in _fit
    model.fit(
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/abstract/abstract_timeseries_model.py", line 475, in fit
    self._initialize_transforms_and_regressor()
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/abstract/abstract_timeseries_model.py", line 414, in _initialize_transforms_and_regressor
    self.target_scaler = get_target_scaler(self.get_hyperparameters().get("target_scaler"), target=self.target)
  File "/Users/katarov/flex-ml/flex-ml-python-only/.venv/lib/python3.9/site-packages/autogluon/timeseries/models/gluonts/abstract.py", line 231, in get_hyperparameters
    raise ValueError(f"Parameter '{alias}' cannot be specified when '{actual}' is also specified.")
ValueError: Parameter 'epochs' cannot be specified when 'max_epochs' is also specified.

Training timeseries model ARIMA. Training for up to 295.0s of the 590.0s of remaining time.
	-0.5616       = Validation score (-MAPE)
	0.01    s     = Training runtime
	1.69    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'ARIMA': 0.01, 'NPTS': 0.36, 'Theta': 0.63}
	-0.4981       = Validation score (-MAPE)
	0.13    s     = Training runtime
	4.95    s     = Validation (prediction) runtime
Training complete. Models trained: ['SeasonalNaive', 'RecursiveTabular', 'DirectTabular', 'NPTS', 'Theta', 'AutoETS', 'ARIMA', 'WeightedEnsemble']
Total runtime: 10.57 s
Best model: WeightedEnsemble
Best model score: -0.4981
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Model not specified in predict, will default to the model with the best validation score: WeightedEnsemble
Model not specified in predict, will default to the model with the best validation score: WeightedEnsemble
Model not specified in predict, will default to the model with the best validation score: WeightedEnsemble
Loading predictor from path /Users/katarov/flex-ml/flex-ml-python-only/AutogluonModels/ag-20250915_122457
Model not specified in predict, will default to the model with the best validation score: WeightedEnsemble
